{"version":3,"sources":["classBased/components/TodoItem.js","classBased/components/TodosList.js","classBased/components/Header.js","classBased/components/InputTodo.js","classBased/components/TodoContainer.js","index.js","classBased/components/TodoItem.module.css"],"names":["TodoItem","props","handelEditing","setState","edit","endEdit","event","key","state","editMode","viewMode","this","todo","handelChangeProp","deleteTodoProp","editTodoProp","display","id","title","completed","className","styles","item","style","onDoubleClick","checkbox","type","checked","onChange","fontStyle","color","opacity","textDecoration","onClick","textInput","value","e","target","onKeyDown","React","Component","TodosList","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","handelSubmit","preventDefault","addTodoProp","trim","alert","onSubmit","placeholder","TodoContainer","componentDidMount","temp","localStorage","getItem","loadedTodos","JSON","parse","handleChange","delTodo","filter","addTodoItem","newtitle","newTodo","uuidv4","editTodo","updatedTitle","prevProps","prevState","stringify","setItem","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e5481b8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TodoItem.module.css';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n    };\n  }\n\n  handelEditing = () => {\n    this.setState({\n      edit: true,\n    });\n  };\n\n  endEdit = (event) => {\n    if (event.key === 'Enter') {\n      this.setState({\n        edit: false,\n      });\n    }\n  };\n\n  render() {\n    const editMode = {};\n    const viewMode = {};\n    const { edit } = this.state;\n    const {\n      todo,\n      handelChangeProp,\n      deleteTodoProp,\n      editTodoProp,\n    } = this.props;\n    if (edit === true) {\n      viewMode.display = 'none';\n    } else {\n      editMode.display = 'none';\n    }\n    const completedStyle = {\n      fontStyle: 'italic',\n      color: '#595959',\n      opacity: 0.4,\n      textDecoration: 'line-through',\n    };\n    const { id, title, completed } = todo;\n    return (\n      <li className={styles.item}>\n        <div\n          style={viewMode}\n          onDoubleClick={() => {\n            this.handelEditing();\n          }}\n        >\n          <input\n            className={styles.checkbox}\n            type=\"checkbox\"\n            checked={completed}\n            onChange={() => {\n              handelChangeProp(id);\n            }}\n          />\n          <span style={completed ? completedStyle : null}>{title}</span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              deleteTodoProp(id);\n            }}\n          >\n            Delete\n          </button>\n        </div>\n        <input\n          type=\"text\"\n          style={editMode}\n          className={styles.textInput}\n          value={title}\n          onChange={(e) => {\n            editTodoProp(id, e.target.value);\n          }}\n          onKeyDown={this.endEdit}\n        />\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  todo: PropTypes.object.isRequired,\n  handelChangeProp: PropTypes.func.isRequired,\n  deleteTodoProp: PropTypes.func.isRequired,\n  editTodoProp: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport './TodoItem.module.css';\n\nconst TodosList = (props) => {\n  const { todos } = props;\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handelChangeProp={props.handelChangeProp}\n          deleteTodoProp={props.deleteTodoProp}\n          editTodoProp={props.editTodoProp}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  handelChangeProp: PropTypes.func.isRequired,\n  deleteTodoProp: PropTypes.func.isRequired,\n  editTodoProp: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  todos: PropTypes.array.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\n\nconst Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n\n  return (\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: '6rem',\n          fontWeight: '600',\n          marginBottom: '2rem',\n          lineHeight: '1em',\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n      >\n        Todos\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n    };\n    this.alert = '';\n  }\n\n  onChange = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handelSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    const { addTodoProp } = this.props;\n    if (title.trim()) {\n      addTodoProp(title);\n      this.setState({\n        title: '',\n      });\n    } else {\n      this.alert = 'Please write item';\n    }\n  };\n\n  render() {\n    const { title } = this.state;\n    return (\n      <form onSubmit={this.handelSubmit} className=\"form-container\">\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          placeholder=\"Add Todo...\"\n          value={title}\n          onChange={this.onChange}\n        />\n        <h4>{this.alert}</h4>\n        <button type=\"button\" className=\"input-submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nInputTodo.propTypes = {\n  addTodoProp: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import { v4 as uuidv4 } from 'uuid';\nimport React, { Component } from 'react';\nimport TodosList from './TodosList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\n\nclass TodoContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  componentDidMount = () => {\n    const temp = localStorage.getItem('todos');\n    const loadedTodos = JSON.parse(temp);\n    if (loadedTodos) {\n      this.setState({\n        todos: loadedTodos,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { todos } = this.state;\n    if (prevState.todos !== todos) {\n      const temp = JSON.stringify(todos);\n      localStorage.setItem('todos', temp);\n    }\n  }\n\n  handleChange = (id) => {\n    this.setState((state) => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      }),\n    }));\n  };\n\n  delTodo = (id) => {\n    this.setState((state) => ({\n      todos: state.todos.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  addTodoItem = (newtitle) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: newtitle,\n      completed: false,\n    };\n    const { todos } = this.state;\n    this.setState({\n      todos: [...todos, newTodo],\n    });\n  };\n\n  editTodo = (id, updatedTitle) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.title = updatedTitle;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  render() {\n    const { todos } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"inner\">\n          <Header />\n          <InputTodo addTodoProp={this.addTodoItem} />\n          <TodosList\n            todos={todos}\n            handelChangeProp={this.handleChange}\n            deleteTodoProp={this.delTodo}\n            editTodoProp={this.editTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './classBased/index.css';\nimport TodoContainer from './classBased/components/TodoContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__21nD8\",\"checkbox\":\"TodoItem_checkbox__h-7Bd\",\"textInput\":\"TodoItem_textInput__2nvJT\"};"],"sourceRoot":""}